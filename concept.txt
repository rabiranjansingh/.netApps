C:\Users\rabit\Documents\SQL Server Management Studio \  all sql query


float a=5.5f; /// i have to provide the f at the ned otherwise it is treat as double 
A 32-bit floating point number

Floating Point Types :
There are 2 floating point data types which contain the decimal point.

Float: 
It is 32-bit single-precision floating point type. 
It has 7 digit Precision. To initialize a float variable, use the suffix f or F. 
Like, float x = 3.5F;. If the suffix F or f will not use then it is treated as double.

Double:
It is 64-bit double-precision floating point type. It has 14 â€“ 15 digit Precision.
To initialize a double variable, use the suffix d or D. But it is not mandatory to use
suffix because by default floating data types are the double type.


WHEN USE DECIMAL OR DOUBLE

Use decimal whenever you're dealing with quantities that you want to (and can) be represented exactly in base-10.
That includes monetary values, because you want 2.1234 to be represented exactly as 2.1234.

Use double when you don't need an exact representation in base-10. This is usually good for handling measurements, 
because those are already approximations, not exact quantities.

Of course, if having or not an exact representation in base-10 is not important to you, 
other factors come into consideration, which may or may not matter depending on the specific situation:

double has a larger range (it can handle very large and very small magnitudes);
decimal has more precision (has more significant digits);
you may need to use double to interact with some older APIs that are not aware of decimal;
double is faster than decimal;
decimal has a larger memory footprint;

for stock price use double 

SQL Server data type          CLR data type (SQL Server)    CLR data type (.NET Framework)  
varbinary                     SqlBytes, SqlBinary           Byte[]  
binary                        SqlBytes, SqlBinary           Byte[]  
varbinary(1), binary(1)       SqlBytes, SqlBinary           byte, Byte[] 
image                         None                          None

varchar                       None                          None
char                          None                          None
nvarchar(1), nchar(1)         SqlChars, SqlString           Char, String, Char[]     
nvarchar                      SqlChars, SqlString           String, Char[] 
nchar                         SqlChars, SqlString           String, Char[] 
text                          None                          None
ntext                         None                          None

uniqueidentifier              SqlGuid                       Guid 
rowversion                    None                          Byte[]  
bit                           SqlBoolean                    Boolean 
tinyint                       SqlByte                       Byte 
smallint                      SqlInt16                      Int16  
int                           SqlInt32                      Int32  
bigint                        SqlInt64                      Int64 

smallmoney                    SqlMoney                      Decimal  
money                         SqlMoney                      Decimal  
numeric                       SqlDecimal                    Decimal  
decimal                       SqlDecimal                    Decimal  
real                          SqlSingle                     Single  
float                         SqlDouble                     Double  

smalldatetime                 SqlDateTime                   DateTime  
datetime                      SqlDateTime                   DateTime 

sql_variant                   None                          Object  
User-defined type(UDT)        None                          user-defined type     
table                         None                          None 
cursor                        None                          None
timestamp                     None                          None 
xml                           SqlXml                        None
